language: cpp
sudo: false

matrix:
 include:

 # Linux builds
 # ------------

 # GCC builds
 - os: linux
   compiler: gcc
   env:
    - COMPILER=g++-5
    - BUILD_TYPE=Release
    - COVERAGE=false
   addons: &gcc5
    apt:
     sources:
      - ubuntu-toolchain-r-test
     packages:
      - g++-5
 - os: linux
   compiler: gcc
   env:
    - COMPILER=g++-5
    - BUILD_TYPE=Debug
    - BUILD_EXT=-d
    - COVERAGE=true
   addons: *gcc5

 # Clang builds
 # from https://github.com/travis-ci/travis-ci/issues/6120
 - os: linux
   dist: trusty
   sudo: required
   env: &clang_env
    - LLVM_VERSION=3.8.0
    - LLVM_ARCHIVE_PATH=$HOME/clang+llvm.tar.xz
    - COMPILER=clang++
    - CPPFLAGS="-I $HOME/clang-$LLVM_VERSION/include/c++/v1"
    #- CXXFLAGS=-lc++
    - PATH=$HOME/clang-$LLVM_VERSION/bin:$PATH
    - LD_LIBRARY_PATH=$HOME/clang-$LLVM_VERSION/lib:$LD_LIBRARY_PATH
    - BUILD_TYPE=Debug
    - BUILD_EXT=-d
    - COVERAGE=true
   before_install: &clang_before_install
    - wget http://llvm.org/releases/$LLVM_VERSION/clang+llvm-$LLVM_VERSION-x86_64-linux-gnu-ubuntu-14.04.tar.xz -O $LLVM_ARCHIVE_PATH
    - mkdir $HOME/clang-$LLVM_VERSION
    - tar xf $LLVM_ARCHIVE_PATH -C $HOME/clang-$LLVM_VERSION --strip-components 1

  # Mac OSX builds
  # --------------
 - os: osx
   osx_image: xcode 7.3
   compiler: clang
   env:
    - COMPILER=clang++
    - BUILD_TYPE=Release
    - COVERAGE=false
 - os: osx
   osx_image: xcode 7.3
   compiler: clang
   env:
    - COMPILER=clang++
    - BUILD_TYPE=Debug
    - BUILD_EXT=-d
    - COVERAGE=true

install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew install cmake ccache
    fi

script:
 - uname -a
 - $COMPILER --version
 - mkdir build
 - cd build
 - cmake -DCMAKE_CXX_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DOTL_ENABLE_CODE_COVERAGE=$COVERAGE .. && make
 - ./bin/otl-unit-test$BUILD_EXT
 - make gcov

after_success:
 - bash <(curl -s https://codecov.io/bash)

notifications:
 email: false
